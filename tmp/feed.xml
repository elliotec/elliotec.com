<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Blog Name</title>
  <subtitle>Blog subtitle</subtitle>
  <id>http://blog.url.com/</id>
  <link href="http://blog.url.com/"/>
  <link href="http://blog.url.com/feed.xml" rel="self"/>
  <updated>2014-04-17T05:26:11-06:00</updated>
  <author>
    <name>Blog Author</name>
  </author>
  <entry>
    <title>Building This Site</title>
    <link rel="alternate" href="http://blog.url.com/building-this-site/"/>
    <id>http://blog.url.com/building-this-site/</id>
    <published>2014-04-17T05:26:11-06:00</published>
    <updated>2014-05-22T17:33:32-06:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;h2&gt;Blogging platforms vs. static site generators&lt;/h2&gt;

&lt;p&gt;I had been looking around for a good way to get a portfolio site and blogging platform all in one that suited my tastes. &lt;/p&gt;

&lt;p&gt;For a short time I looked into platforms such as &lt;a href="http://ghost.org"&gt;Ghost&lt;/a&gt;, &lt;a href="http://medium.com"&gt;Medium&lt;/a&gt;, and &lt;a href="http://svbtle.com"&gt;Svbtle&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;I really liked the design, simplicity, and content-focus of those, but as a developer, I wanted something I could get my hands dirty with and design myself with minimal third-party interference. &lt;/p&gt;

&lt;p&gt;Then I found &lt;a href="http://jekyllrb.com"&gt;Jekyll&lt;/a&gt;. I quickly realized that what I wanted was a &amp;ldquo;blog-aware&amp;rdquo; static site generator rather than a blogging platform alone. This would give me the ability to fully customize every aspect of my site while allowing me a place to write posts (bonus points for the fact that I&amp;rsquo;m writing the posts in my text editor!).&lt;/p&gt;

&lt;p&gt;I had Jekyll installed and running on a development server in a minute or two. I was able to acquaint myself with the directory structure fairly quickly after going through the docs a bit and looking at some example sites - my favorite of which is &lt;a href="http://quaran.to"&gt;quaran.to&lt;/a&gt;, the personal blog of Nick Quaranto.&lt;/p&gt;

&lt;p&gt;It uses the &lt;a href="http://liquidmarkup.org/"&gt;Liquid Templating Engine&lt;/a&gt;, which is a &amp;ldquo;Ruby library for rendering safe templates which cannot affect the security of the server they are rendered on.&amp;rdquo; It looks remarkably like erb in Handlebars. It didn&amp;rsquo;t take much getting used to, but I was slightly annoyed that a Ruby-driven framework wasn&amp;rsquo;t just using erb. &lt;/p&gt;

&lt;p&gt;In addition to that slight inconvenience, I had to use the pre-release version of Jekyll in order to have Sass and CoffeeScript support - not a huge deal until I found the hard way that if hosting on Github pages (one of Jekyll&amp;rsquo;s major selling points), you are limited to the version they use.&lt;/p&gt;

&lt;p&gt;So my options were thus:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Write a Rake task that compiles Sass and CoffeeScript&lt;/li&gt;
&lt;li&gt;Use and configure plugins&lt;/li&gt;
&lt;li&gt;Wait for Jekyll 2.0 to be released and then Github Pages to adopt it&lt;/li&gt;
&lt;li&gt;Use a different generator&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;All the options seemed annoying at the time.&lt;/p&gt;

&lt;h2&gt;Finding Middleman&lt;/h2&gt;

&lt;p&gt;I had all but given up on Jekyll (Sass is VERY important to me) when 2.0 was released. I was excited, but a bit disillusioned. I found out from &lt;a href="https://news.ycombinator.com/item?id=7708142"&gt;This Hacker News Post&lt;/a&gt;, and lo and behold the top comment was the elusive solution to all my static site-generating problems: &lt;a href="http://middlemanapp.com"&gt;Middleman&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Middleman&amp;rsquo;s file structure was immediately familiar and it&amp;rsquo;s Rails-like atmosphere sold me instantly. erb instead of Liquid-Ruby-Handlebars? Check. Sass and CoffeeScript support out of the box? Check. Ability to host on Github Pages, Heroku, or any other production environment imaginable with little configuration? Check, check, and check.&lt;/p&gt;

&lt;p&gt;Now I could finally get to the fun part and design my site. I came accross these two posts that were immensely helpful:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="http://fajitanachos.com/Goodbye-jekyll/"&gt;FajitaNachos&amp;rsquo;s post entitled &amp;lsquo;Goodbye Jekyll&amp;rsquo;&lt;/a&gt; &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;This was also a huge inspiration for the actual design of my site and I blatantly ripped off a few aspects that I&amp;rsquo;m really happy with. Andrew, if you&amp;rsquo;re reading this, you are admired and respected and I thank you for this post and your site.&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="http://robots.thoughtbot.com/middleman-bourbon-walkthrough"&gt;Thoughtbot&amp;rsquo;s post entitled &amp;lsquo;Styling a Middleman Blog with Bourbon, Neat, and Bitters&amp;rsquo;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Though I had long admired Thoughtbot for their amazing work and invaluable blog content, this post in particular sent me down a rabbit hole that guided my evolution into a bona fide Thoughtbot fanboy. Seriously.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;What you see here is the result of this process. In a future post, I&amp;rsquo;ll describe some of the methodology I used in the site&amp;rsquo;s creation and give some code samples and tips I found useful in it&amp;rsquo;s development. In the meantime, check out the code on &lt;a href="http://github.com/elliotec/middleman"&gt;my Github&lt;/a&gt; if you wish.&lt;/p&gt;
</content>
  </entry>
</feed>
